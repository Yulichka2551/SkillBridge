paths:
  /users:
    get:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find all users
      description: Finds and returns an array with a list of users.
      produces:
        - application/json
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/users'
              example:
                - _id: 6255bc080a75adf9223df100
                  role:
                    - student
                    - tutor
                  firstName: John
                  lastName: Doe
                  email: johndoe@gmail.com
                  mainSubjects:
                    student:
                      - _id: 64593435163b62124ce4c3ab
                        category:
                          _id: 6421ed8ed991d46a84721df2
                          name: Cybersecurity
                          appearance:
                            icon: mocked-path-to-icon
                            color: '#66c42c'
                        subjects:
                          _id: 6421ed8ed991d46a84721df2
                          name: XSS Attack
                      - _id: 64593435263b62124ce4c3ck
                        category:
                          _id: 6421ed8ed991d46a84721dfa
                          name: music
                          appearance:
                            icon: mocked-path-to-icon
                            color: '#66c42c'
                        subjects:
                          _id: 6422d995d898aa732d038e8f
                          name: Guitar
                    tutor:
                      - _id: 64593435163b62124ce4c3ab
                        category:
                          _id: 6421ed8ed991d46a84721df2
                          name: Cybersecurity
                          appearance:
                            icon: mocked-path-to-icon
                            color: '#66c42c'
                        subjects:
                          _id: 6421ed8ed991d46a84721df2
                          name: XSS Attack
                  totalReviews:
                    student: 10
                    tutor: 8
                  averageRating:
                    student: 4.5
                    tutor: 4.9
                  nativeLanguage: English
                  address:
                    country: The USA
                    city: California
                  professionalSummary: KNPU H.S. Skovoroda
                  photo: john-doe-photo.jpg
                  status:
                    student: active
                    tutor: active
                    admin: active
                  lastLogin: null
                  lastSeen: null
                  aboutStudent:
                    personalIntroduction: ''
                    learningGoals: ''
                    learningActivities: ''
                  FAQ:
                    student:
                      - question: tutor question
                        _id: 63525e23bf163f5ea609ff2b
                        answer: tutor answer
                    tutor:
                      - question: tutor question
                        _id: 63525e23bf163f5ea609ff2b
                        answer: tutor answer
                  videoLink:
                    student: www.youtube.com/watch?v=ebTnuLRnIOY
                    tutor: www.youtube.com/watch?v=ebTnuLRnIOY
                  notificationSettings:
                    isOfferStatusNotification: true
                    isChatNotification: true
                    isSimilarOffersNotification: true
                    isEmailNotification: true
                  createdAt: 2021-04-09T11:34:53.243+00:00
                  updatedAt: 2022-09-02T11:59:53.243+00:00
                - _id: 8755bc080a00adr9243df104
                  role:
                    - tutor
                  firstName: Joe
                  lastName: Doe
                  email: joedoe@outlook.com
                  mainSubjects:
                    tutor:
                      - _id: 64593435163b62124ce4c3ab
                        category:
                          _id: 6421ed8ed991d46a84721df2
                          name: Cybersecurity
                          appearance:
                            icon: mocked-path-to-icon
                            color: '#66c42c'
                        subjects:
                          - _id: 6421ed8ed991d46a84721df2
                            name: XSS Attack
                    student: []
                  totalReviews:
                    student: 0
                    tutor: 530
                  averageRating:
                    student: 0
                    tutor: 5
                  nativeLanguage: Ukrainian
                  address:
                    country: Ukraine
                    city: Kharkiv
                  professionalSummary: KNPU H.S. Skovoroda
                  photo: joe-doe-photo.jpg
                  status:
                    student: active
                    tutor: active
                    admin: active
                  FAQ:
                    student:
                      - question: student question
                        _id: 63525e23bf163f5ea609ff2b
                        answer: student answer
                    tutor:
                      - question: tutor question
                        _id: 63525e23bf163f5ea609ff2b
                        answer: tutor answer
                    _id: 63525e23bf163f5ea609ff3c
                  videoLink:
                    tutor: www.youtube.com/watch?v=ebTnuLRnIOY
                    student: ''
                  lastLogin: 2022-09-02T11:59:53.243+00:00
                  lastSeen: 2022-09-02T11:59:53.243+00:00
                  createdAt: 2021-04-09T11:34:53.243+00:00
                  updatedAt: 2022-09-02T11:59:53.243+00:00
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
  /users/{id}/change-status:
    patch:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find and update user status by ID
      description: Finds and updates a user status with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user that needs to be updated
          type: string
      requestBody:
        required: true
        description: Provide required data to update user status.
        content:
          application/json:
            schema:
              $ref: '#/definitions/user'
            example:
              tutor: active
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'DOCUMENT_NOT_FOUND'
                message: 'User with the specified id was not found.'
  /users/{id}:
    get:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find user by ID
      description: Finds and returns a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user that needs to be fetched
          type: string
        - name: role
          in: query
          required: false
          description: Role of the user that needs to be fetched
          type: string
        - name: isEdit
          in: query
          required: false
          description: If true will return isDeletionBlocked field for every category in main subjects
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/user'
              example:
                _id: 6255bc080a75adf9223df100
                role:
                  - student
                firstName: John
                lastName: Doe
                email: johndoe@gmail.com
                mainSubjects:
                  student:
                    - _id: 64593435163b62124ce4c3ab
                      category:
                        _id: 6421ed8ed991d46a84721df2
                        name: Cybersecurity
                        appearance:
                          icon: IconName
                          color: '#123456'
                      subjects:
                        - _id: 6421ed8ed991d46a84721df2
                          name: XSS Attack
                      isDeletionBlocked: false
                  tutor: []
                totalReviews:
                  student: 10
                  tutor: 0
                averageRating:
                  student: 4.5
                  tutor: 0
                nativeLanguage: English
                address:
                  country: The USA
                  city: California
                professionalSummary: KNPU H.S. Skovoroda
                professionalBlock:
                  awards: ''
                  scientificActivities: ''
                  workExperience: ''
                  education: ''
                photo: john-doe-photo.jpg
                status:
                  student: active
                  tutor: active
                  admin: active
                isEmailConfirmed: true
                isFirstLogin: true
                lastLoginAs: tutor
                lastLogin: 2022-09-02T11:59:53.243+00:00
                lastSeen: 2022-09-02T11:59:53.243+00:00
                bookmarkedOffers: []
                FAQ:
                  student:
                    - question: tutor question
                      _id: 63525e23bf163f5ea609ff2b
                      answer: tutor answer
                  tutor:
                    - question: tutor question
                      _id: 63525e23bf163f5ea609ff2b
                      answer: tutor answer
                videoLink:
                  student: www.youtube.com/watch?v=ebTnuLRnIOY
                  tutor: www.youtube.com/watch?v=ebTnuLRnIOY
                createdAt: 2021-04-09T11:34:53.243+00:00
                updatedAt: 2022-09-02T11:59:53.243+00:00
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'DOCUMENT_NOT_FOUND'
                message: 'User with the specified id was not found.'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 422
                code: 'FIELD_IS_NOT_OF_PROPER_ENUM_VALUE'
                message: 'role should be either one of the values: [student, tutor].'
    patch:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find and update current user info
      description: Finds and updates current user info.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user that needs to be updated
          type: string
      requestBody:
        required: true
        description: Provide required data to update user.
        content:
          application/json:
            schema:
              $ref: '#/definitions/user'
            example:
              firstName: Albus
              lastName: Dumbledore
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'DOCUMENT_NOT_FOUND'
                message: 'User with the specified id was not found.'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 409
                code: 'VALIDATION_ERROR'
                message: 'Validation for new user info failed.'
    delete:
      security:
        - cookieAuth: []
        - role:
            - admin
      tags:
        - Users
      summary: Find and delete user by ID
      description: Finds and deletes a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user that needs to be deleted
          type: string
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'DOCUMENT_NOT_FOUND'
                message: 'User with the specified id was not found.'
  /users/{id}/cooperations:
    get:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find cooperations for a user with the specified ID
      description: Finds and returns all cooperations for a user with the specified ID.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user for whom we trying to find cooperations
          type: string
        - in: query
          name: sort
          schema:
            type: string
            default: { 'order': 'asc', 'orderBy': 'updatedAt' }
          required: false
        - in: query
          name: skip
          schema:
            type: integer
            default: 0
        - in: query
          name: status
          schema:
            type: string
            default: 0
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            default: 5
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/cooperations'
              example:
                - _id: 63ebc6fbd2f34037d0aba314
                  offer:
                    id: 63ebc6fbd2f34037d0aba791
                    price: 200,
                    title: Introduction to Web Development
                    subject:
                      _id: 66758f4059019cd05eb11a94
                      name: Data Structures and Algorithms
                    category:
                      _id: 64884fedfdc2d1a130c24ade
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#462027'
                  initiator: 6255bc080a75adf9223df212
                  initiatorRole: student
                  receiver: 6255bc080a75adf9223df100
                  receiverRole: tutor
                  title: Introduction to Web Development
                  proficiencyLevel: Beginner
                  price: 300
                  status: active
                  needAction: tutor
                  additionalInfo: This course is designed for beginners interested in web development basics.
                  availableQuizzes: []
                  finishedQuizzes: []
                  createdAt: 2021-05-09T11:34:53.243+00:00
                  updatedAt: 2022-07-02T11:59:53.243+00:00
                  user:
                    _id: 6741b1141550cb6f3fae785c
                    firstName: John
                    lastName: Doe
                    photo: ''
                    role: student
                - _id: 63ebc6fbd2f34037d0aba314
                  offer:
                    id: 64ebc6fbd2f34037d0aba781
                    price: 150,
                    title: Advanced JavaScript Programming
                    subject:
                      _id: 66758f4059019cd05eb11a95
                      name: Software Engineering Principles
                    category:
                      _id: 64884fedfdc2d1a130c45ade
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#462029'
                  initiator: 6255bc080a75adf9223df232
                  initiatorRole: student
                  receiver: 6255bc080a75adf9223df134
                  receiverRole: tutor
                  title: Advanced JavaScript Programming
                  proficiencyLevel: Intermediate
                  price: 150
                  status: closed
                  needAction: tutor
                  additionalInfo: Focuses on deepening JavaScript skills for intermediate learners.
                  availableQuizzes: []
                  finishedQuizzes: []
                  createdAt: 2021-05-09T11:34:53.243+00:00
                  updatedAt: 2022-07-02T11:59:53.243+00:00
                  user:
                    _id: 6741b1141550cb6f3fae789c
                    firstName: John
                    lastName: Doe
                    photo: ''
                    role: student
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: User with the specified id was not found.
  /users/{id}/offers:
    get:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find offers for a user with the specified ID
      description: Finds and returns all offers for a user with the specified ID.
      produces:
        - application/json
      parameters:
        in: path
        required: true
        description: ID of the user for whom we are trying to find offers
        type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/offers'
              example:
                count: 2
                items:
                  - _id: 666c2ecf89ff51666ab11a4a
                    price: 300
                    proficiencyLevel:
                      - Intermediate
                    title: Advanced English Course
                    description: A comprehensive English course for intermediate learners.
                    languages:
                      - English
                      - Ukrainian
                    authorRole: tutor
                    author:
                      _id: 666c26bd89ff51666ab119d2
                      firstName: John
                      lastName: Doe
                      totalReviews:
                        student: 0
                        tutor: 0
                      averageRating:
                        student: 0
                        tutor: 0
                      nativeLanguage: Ukrainian
                      status:
                        student: active
                        tutor: active
                        admin: active
                      photo: 1718364085578-What-is-landscape-photography.jpg
                      professionalSummary: Experienced tutor with 10 years of experience in language teaching.
                    enrolledUsers: []
                    subject:
                      _id: 65660fbbcb972798c401a9b4
                      name: English
                    category:
                      _id: 64884f4dfdc2d1a130c24ac6
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#F67C41'
                    status: active
                    FAQ:
                      - question: What is the course duration?
                        answer: The course lasts for 8 weeks.
                        _id: 666c2ecf89ff51666ab11a4b
                      - question: Are there any prerequisites?
                        answer: Basic English knowledge is required.
                        _id: 666c2ecf89ff51666ab11a4c
                    createdAt: 2024-06-14T11:51:43.406Z
                    updatedAt: 2024-06-14T13:45:22.406Z
                    chatId: null
                  - _id: 666c2ecf89ff51666ab11a4b
                    price: 350
                    proficiencyLevel:
                      - Advanced
                    title: Data Science with Python
                    description: An advanced course on data science techniques using Python.
                    languages:
                      - English
                    authorRole: tutor
                    author:
                      _id: 666c26bd89ff51666ab119d5
                      firstName: Jane
                      lastName: Doe
                      totalReviews:
                        student: 0
                        tutor: 0
                      averageRating:
                        student: 0
                        tutor: 0
                      nativeLanguage: English
                      status:
                        student: active
                        tutor: active
                        admin: active
                      photo: 1718364095578-What-is-landscape-photography.jpg
                      professionalSummary: Data scientist with extensive experience in machine learning.
                    enrolledUsers: []
                    subject:
                      _id: 65660fbbcb972798c401a9b8
                      name: Data Science
                    category:
                      _id: 64884f4dfdc2d1a130c24ad6
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#F67C31'
                    status: active
                    FAQ:
                      question: Is prior programming experience necessary?
                      answer: Yes, basic Python knowledge is recommended.
                      _id: 666c2ecf89ff51666ab11a4d
                    createdAt: 2024-07-12T11:51:43.406Z
                    updatedAt: 2024-07-14T13:45:22.406Z
                    chatId: null
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: User with the specified id was not found.
  /users/{id}/bookmarks/offers:
    get:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Find bookmarked offers
      description: Finds and returns bookmarked offers for the current user.
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
        - in: query
          name: skip
          schema:
            type: integer
          required: false
        - in: query
          name: title
          description: The title of the offer to be found
          schema:
            type: string
          required: false
        - in: query
          name: sortBy
          description: 'createdAt | priceAsc | priceDesc | rating'
          schema:
            type: string
          required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/bookmarkedOffers'
              example:
                count: 2
                items:
                  - _id: 666c2ecf89ff51666ab11a4a
                    price: 300
                    proficiencyLevel:
                      - Intermediate
                    title: Advanced English Course
                    description: A comprehensive English course for intermediate learners.
                    languages:
                      - English
                      - Ukrainian
                    authorRole: tutor
                    author:
                      _id: 666c26bd89ff51666ab119d2
                      firstName: John
                      lastName: Doe
                      totalReviews:
                        student: 0
                        tutor: 0
                      averageRating:
                        student: 0
                        tutor: 0
                      nativeLanguage: Ukrainian
                      status:
                        student: active
                        tutor: active
                        admin: active
                      photo: 1718364085578-What-is-landscape-photography.jpg
                      professionalSummary: Experienced tutor with 10 years of experience in language teaching.
                    enrolledUsers: []
                    subject:
                      _id: 65660fbbcb972798c401a9b4
                      name: English
                    category:
                      _id: 64884f4dfdc2d1a130c24ac6
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#F67C41'
                    status: active
                    FAQ:
                      - question: What is the course duration?
                        answer: The course lasts for 8 weeks.
                        _id: 666c2ecf89ff51666ab11a4b
                      - question: Are there any prerequisites?
                        answer: Basic English knowledge is required.
                        _id: 666c2ecf89ff51666ab11a4c
                    createdAt: 2024-06-14T11:51:43.406Z
                    updatedAt: 2024-06-14T13:45:22.406Z
                    chatId: null
                  - _id: 666c2ecf89ff51666ab11a4b
                    price: 350
                    proficiencyLevel:
                      - Advanced
                    title: Data Science with Python
                    description: An advanced course on data science techniques using Python.
                    languages:
                      - English
                    authorRole: tutor
                    author:
                      _id: 666c26bd89ff51666ab119d5
                      firstName: Jane
                      lastName: Doe
                      totalReviews:
                        student: 0
                        tutor: 0
                      averageRating:
                        student: 0
                        tutor: 0
                      nativeLanguage: English
                      status:
                        student: active
                        tutor: active
                        admin: active
                      photo: 1718364095578-What-is-landscape-photography.jpg
                      professionalSummary: Data scientist with extensive experience in machine learning.
                    enrolledUsers: []
                    subject:
                      _id: 65660fbbcb972798c401a9b8
                      name: Data Science
                    category:
                      _id: 64884f4dfdc2d1a130c24ad6
                      appearance:
                        icon: mocked-path-to-icon
                        color: '#F67C31'
                    status: active
                    FAQ:
                      question: Is prior programming experience necessary?
                      answer: Yes, basic Python knowledge is recommended.
                      _id: 666c2ecf89ff51666ab11a4d
                    createdAt: 2024-07-12T11:51:43.406Z
                    updatedAt: 2024-07-14T13:45:22.406Z
                    chatId: null
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: INVALID_ID
                message: ID is invalid.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: UNAUTHORIZED
                message: The requested URL requires user authorization.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: DOCUMENT_NOT_FOUND
                message: User with the specified id was not found.
  /users/{id}/bookmarks/offers/{offerId}:
    patch:
      security:
        - cookieAuth: []
      tags:
        - Users
      summary: Add or remove a bookmark for an offer
      description: Adds a bookmark for an offer if the offer don't have a bookmark and removes a bookmark if it's present.
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user for whom we're trying to add/remove a bookmark
          type: string
        - name: offerId
          in: path
          required: true
          description: Offer ID
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/toggleBookmarkResponse'
              example:
                - 6566061a8a848ff2202df85a
                - 656616ed22db8e88f5fa1659
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 400
                code: 'INVALID_ID'
                message: 'ID is invalid.'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 401
                code: 'UNAUTHORIZED'
                message: 'The requested URL requires user authorization.'
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 403
                code: FORBIDDEN
                message: You do not have permission to perform this action.
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/Error'
              example:
                status: 404
                code: 'DOCUMENT_NOT_FOUND'
                message: 'Offer with the specified ID was not found.'
